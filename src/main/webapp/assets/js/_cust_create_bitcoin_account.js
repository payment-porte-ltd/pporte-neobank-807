i18next.init({
	lng: 'EN',
	fallbackLng: 'EN',
	debug: false,
	resources: {
	  EN: {
		translation: {
             /* Menus */
			"idnavmenu_Dashboard":"Dashboard",
			"idnavmenu_ManageFiatWallet":"Manage Fiat Wallet",
			"idnavmenu_DigitalAssets":"Digital Assets",
			"idnavmenu_DigitalAssets":"Digital Assets",
			"idnavmenu_CurrencyRemittance":"Currency Remittance",
			"idnavmenu_ManageCards":"Manage Cards",
			"idnavmenu_Loyalty":"Loyalty",
			"idnavmenu_UpdatePlan":"Update Plan",
			"idnavmenu_Logout":"Logout",
			"idnavmenu_BuyNewPlan":"Buy New Plan",
			"header_buy_porte_token":"Buy Porte Token",
			"btn_buy_coin":"Buy Coin",
			"idnavmenu_Profile":"Profile",
			"idnavmenu_Disputes":"Disputes",
             /* Sub Menus */
            "idnavsubmenu_Dashboard":"Dashboard",
            "idnavsubmenu_ViewandEdit":"View and Edit",
            "idnavsubmenu_ViewWallet":"View Wallet",
            "idnavsubmenu_TopupWallet":"Topup Wallet",
            "idnavsubmenu_SendMoney":"Send Money",
            "idnavsubmenu_CashTransactions":"Cash Transactions",
            "idnavsubmenu_SetupWallet":"Set up Wallet",
            "idnavsubmenu_Bitcoin":"Bitcoin",
            "idnavsubmenu_Assets":"Assets",
            "idnavsubmenu_BuyAsset":"Buy Asset",
            "idnavsubmenu_TransferCoin":"Transfer Coin",
            "idnavsubmenu_Swap":"Swap",
            "idnavsubmenu_SellAssettoFiat":"Sell Asset to Fiat",
            "idnavsubmenu_DisplayTransactions":"Display Transactions",
            "idnavsubmenu_DigitalRemittance":"Digital Remittance",
            "idnavsubmenu_FiatRemittance":"Fiat Remittance",
            "idnavsubmenu_ShowCards":"Show Cards",
            "idnavsubmenu_RedeemPoints":"Redeem Points",
            "idnavsubmenu_ViewDispute":"View Dispute",
            "idnavsubmenu_RaiseDisputes":"Raise Disputes",
            "idnavsubmenu_ChangeYourPlan":"Change Your Plan",
            "idnavsubmenu_BuyNewPlan":"Buy New Plan",
			
            /* Quick links */
            "idnav_UserSettings":"User Settings",
            "idnav_UpdateProfile":"Update Profile",
            "idnav_Logout":"Logout",
             /* Specific Page Content */
			//"greeting":"Customer",
			"breadcrumb-item-digital-assets":"Digital Assets",
			"breadcrumb-item-set-up-wallet":"Set up Wallet",
			"card-title-set-up-wallet":"Set up Wallet",
			"tab-header-generate-seed-phase":"Generate Seed Phase",
			"tab-header-create-wallet":"Create Wallet",
			"question_label":"Do you have either Bitcoin Wallet or Stellar Account?",
			"yes_label":"Yes",
			"no_label":"No",
			"checkbox_label":"Click the check box if you want to proceed to register Bitcoin account",
			"register_label":"Register",
			"register_label_reg":"Register",
			"scroll-header-label":"Scroll to get the next Mnemonic code",
			"spn_pragraph_words":"Please write these words in the order they follow each other and store in a safe place <br> Scroll to your left to reveal the next words >>",
			"spn_previous_btn":"Previous",
			"next_btn":"Next",
			"confirmation-check-box-label":"Click to confirm that you have saved the mnemonic code",
			"spn_we_dont_store_private":"We never store your private key in our system, please save your 12 words safely and in correct sequence",
			"register_label":"Register",
			"question_label_1":"Do you have Mnemonic code generated by a previous wallet?",
			"yes_label_1":"Yes",
			"no_label_1":"No",
			"1st_to_4th_word":"1st Word to 4th Word",
			"5th_to_8th_word":"5th Word to 8th Word",
			"9th_to_12th_word":"9th Word to 12th Word",
			"btc_account_details":"BTC Account Details",
			"stellar_account_details":"Stellar Account Details",
			"1st_mnemonic_code":"First Mnemonic Code",
			"2nd_mnemonic_code":"Second Mnemonic Code",
			"3rd_mnemonic_code":"Third Mnemonic Code",
			"4th_mnemonic_code":"Fourth Mnemonic Code",
			"5th_mnemonic_code":"Fifth Mnemonic Code",
			"6th_mnemonic_code":"Sixth Mnemonic Code",
			"7th_mnemonic_code":"Seventh Mnemonic Code",
			"8th_mnemonic_code":"Eighth Mnemonic Code",
			"9th_mnemonic_code":"Ninth Mnemonic Code",
			"10th_mnemonic_code":"Tenth Mnemonic Code",
			"11th_mnemonic_code":"Eleventh Mnemonic Code",
			"12th_mnemonic_code":"Twelveth Mnemonic Code",
			"Enter_bitcoin_details":"Enter Bitcoin Details",
			"spn_dont_store_cvv":"We never store your private key in our system",
			"btc_address_label":"BTC Address",
			"public_key_label":"BTC Public Key",
			"checkbox_label_1":"Click the check box if you want to proceed to register Stellar Account",
			"btc_address_label_1":"BTC Address",
			"password_key_label_1":"BTC Public Key",
			"stellar_pub_key_label":"Stellar Public Key",
			"stellar_private_key_label":"Stellar Private Keys",
			"spn_we_are_unable_to_generate_nmonic_label":"The system is unable to create any mnemonic code with the existing private key.",
			"spn_always_use_private_key":"You should always use the private key for signing the transaction.",
			"register_label_2":"Register",
			"select_wallet_asset_label":"Select Wallet Asset",
			"spn_create_wallet_btn":"Create Wallet",
			"spn_bitcoin_and_stellar_keys":"Bitcoin and Stellar Keys",
			"bitcoin_address_45":"Bitcoin Address",
			"btc_public_key_label":"BTC Public Key",
			"btc_private_key_label":"BTC Private Key",
			"stellar_public_key_label":"Stellar Public Key",
			"stellar_private_key_34":"Stellar Private Key",
			"modal_close_btn_label":"Close",
			"modal_click_copy_btn_label":"Click to copy",
			"modal_title_stellar_keys":"Stellar Keys",
			"stellar_public_label_25":"Stellar Public Key",
			"stellar_private_key_label_25":"Stellar Private Key",
			"modal_footer_close_btn_label":"Close",
			"modal_footer_copy_btn_label":"Click to copy",
			"data-validation-error-swal-header":"Oops..",
			"data-validation-error-failed-to-get-details":"Failed to get details",
			"data-validation-problem-with-connection":"Problem with connection",
			"data-validation-check-your-data":"Please check your data",
			"data-validation-select-one-these":"Select one of these",
			"data-validation-checkbox-before-you-proceed":"Select the checkbox before you proceed",
			"copy-confirmation-text":"Please check to confirm that you have copied the codes in a correct sequence.",
			"data-great-text":"Great!",
			"data-thumbs-up-text":"Thumbs up, great!",
			"mnemonic-not-generate-text":"There is no Mnemonic code generated",
			"data-validation-mnemonic-code":"This is required",
			"data-validation-btc-address":"Please enter BTC address",
			"data-validation-btc-public-key":"Please enter BTC public key",
			"data-validation-check-box":"Please check this box",
			"data-validation-public-key":"Please enter Public Key",
			"data-validation-private-key":"Please enter Private Key",
			"wallet-creation-header":"Wallet Creation",
			"non-custodial-wallet-header":"Please note that we are going to create Pporte,VESL,BTCx and USDC Wallets. The Wallets are non-custodial.",
			"enter-your-passsword-tittle":"Enter your Password",
			"enter-your-passsword-label":"Password",
			"data-validation-enter-your-passsword-label":"Please input your password!",
			"copy-stellar-bitcoin-keys-label":"Copying Stellar and Bitcoin Keys",
			"copy-success-label":"You have successfully copied Stellar and Bitcoin Keys, Please Paste and Store in a safe place",
			"data-validation-enter-your-passsword-label":"You have successfully copied Stellar and Bitcoin Keys, Please Paste and Store in a safe place",
			"data-validation-select-asset-coin":"Please select the Asset Coin",
			"data-validation-select-asset-coin-desc":"Please enter the Asset Description",
			"data-validation-wallet-desc":"Wallet description is required",
			"data-validation-asset":"Asset is required",
			"data-validation-password-input":"Please input your password!",
			"data-validation-pvt-input":"Please input your Private Key!",
			"spn_user_wallet_name_label":"User Wallet Name",
			"setup_label":"To set up your bitcoin and stellar wallet, answer the questions below",
			"proceed_label":"and proceed with the required steps:",
			
			
		}
	  },
	  ES: {
		  translation: {
			/* Menus */
			"idnavmenu_Dashboard":"Tablero",
			"idnavmenu_ManageFiatWallet":"Administrar Monedero Fiat",
			"idnavmenu_DigitalAssets":"Recursos digitales",
			"idnavmenu_CurrencyRemittance":"Remesa de divisas",
			"idnavmenu_ManageCards":"Administrar tarjetas",
			"idnavmenu_Loyalty":"Lealtad",
			"idnavmenu_UpdatePlan":"Actualizar plan",
			"idnavmenu_Logout":"Cerrar sesi√≥n",
			"idnavmenu_BuyNewPlan":"Comprar nuevo plan",
			"header_buy_porte_token":"Comprar Token de Porte",
			"btn_buy_coin":"Comprar moneda",
			"idnavmenu_Profile":"Perfil",
             /* Sub Menus */
            "idnavsubmenu_Dashboard":"Tablero",
            "idnavsubmenu_ViewandEdit":"Ver y editar",
            "idnavsubmenu_ViewWallet":"Ver billetera",
            "idnavsubmenu_TopupWallet":"Monedero de recarga",
            "idnavsubmenu_SendMoney":"Enviar dinero",
            "idnavsubmenu_CashTransactions":"Transacciones en efectivo",
            "idnavsubmenu_SetupWallet":"Configurar Monedero",
            "idnavsubmenu_Bitcoin":"Bitcoin",
            "idnavsubmenu_Assets":"Activos",
            "idnavsubmenu_BuyAsset":"Comprar activo",
            "idnavsubmenu_TransferCoin":"Comprar juego de monedas ATransfer",
            "idnavsubmenu_Swap":"Intercambio",
            "idnavsubmenu_SellAssettoFiat":"Vender activos a Fiat",
            "idnavsubmenu_DisplayTransactions":"Mostrar transacciones",
            "idnavsubmenu_DigitalRemittance":"Remesas digitales",
            "idnavsubmenu_FiatRemittance":"Remesa fiduciaria",
            "idnavsubmenu_ShowCards":"Mostrar cartas",
            "idnavsubmenu_RedeemPoints":"Canjear puntos",
            "idnavsubmenu_ViewDispute":"Ver disputa",
            "idnavsubmenu_RaiseDisputes":"Plantear disputas",
            "idnavsubmenu_ChangeYourPlan":"Cambia tu plan",
            "idnavsubmenu_BuyNewPlan":"Comprar nuevo plan",
            /* Quick links */
            "idnav_UserSettings":"Ajustes de usuario",
            "idnav_UpdateProfile":"Actualizaci√≥n del perfil",
            "idnav_Logout":"Cerrar sesi√≥n",
             /* Specific Page Content */
			//"greeting":"Cliente",
			"breadcrumb-item-digital-assets":"Recursos digitales",
			"breadcrumb-item-set-up-wallet":"Configurar Monedero",
			"card-title-set-up-wallet":"Configurar Monedero",
			"tab-header-generate-seed-phase":"Generar fase semilla",
			"tab-header-create-wallet":"Crear billetera",
			"question_label":"¬øTiene una billetera Bitcoin o una cuenta Stellar?",
			"yes_label":"S√≠",
			"no_label":"No",
			"checkbox_label":"Haga clic en la casilla de verificaci√≥n si desea proceder a registrar la cuenta de Bitcoin",
			"register_label":"Registro",
			"register_label_reg":"Registro",
			"scroll-header-label":"Despl√°cese para obtener el siguiente c√≥digo mnemot√©cnico",
			"spn_pragraph_words":"Escriba estas palabras en el orden en que se suceden y gu√°rdelas en un lugar seguro <br> Despl√°cese hacia la izquierda para ver las siguientes palabras >>",
			"spn_previous_btn":"Previa",
			"next_btn":"Pr√≥ximo",
			"confirmation-check-box-label":"Haga clic para confirmar que ha guardado el c√≥digo mnemot√©cnico",
			"spn_we_dont_store_private":"Nunca almacenamos su clave privada en nuestro sistema, guarde sus 12 palabras de forma segura y en la secuencia correcta",
			"register_label":"Registro",
			"question_label_1":"¬øTiene c√≥digo Mnem√≥nico generado por una billetera anterior?",
			"yes_label_1":"S√≠",
			"no_label_1":"No",
			"1st_to_4th_word":"1ra palabra a 4ta palabra",
			"5th_to_8th_word":"5¬™ palabra a 8¬™ palabra",
			"9th_to_12th_word":"9.¬™ palabra a 12.¬™ palabra",
			"btc_account_details":"Detalles de la cuenta BTC",
			"stellar_account_details":"Detalles de la cuenta estelar",
			"1st_mnemonic_code":"Primer c√≥digo mnemot√©cnico",
			"2nd_mnemonic_code":"Segundo c√≥digo mnemot√©cnico",
			"3rd_mnemonic_code":"Tercer c√≥digo mnemot√©cnico",
			"4th_mnemonic_code":"Cuarto c√≥digo mnemot√©cnico",
			"5th_mnemonic_code":"Quinto c√≥digo mnemot√©cnico",
			"6th_mnemonic_code":"Sexto c√≥digo mnemot√©cnico",
			"7th_mnemonic_code":"S√©ptimo c√≥digo mnemot√©cnico",
			"8th_mnemonic_code":"Octavo c√≥digo mnemot√©cnico",
			"9th_mnemonic_code":"Noveno c√≥digo mnemot√©cnico",
			"10th_mnemonic_code":"D√©cimo c√≥digo mnemot√©cnico",
			"11th_mnemonic_code":"Und√©cimo c√≥digo mnemot√©cnico",
			"12th_mnemonic_code":"Duod√©cimo c√≥digo mnemot√©cnico",
			"Enter_bitcoin_details":"Ingrese los detalles de Bitcoin",
			"spn_dont_store_cvv":"Nunca almacenamos su clave privada en nuestro sistema",
			"btc_address_label":"Direcci√≥n BTC",
			"public_key_label":"Clave p√∫blica BTC",
			"checkbox_label_1":"Haga clic en la casilla de verificaci√≥n si desea continuar con el registro de la cuenta Stellar",
			"btc_address_label_1":"Direcci√≥n BTC",
			"password_key_label_1":"Clave p√∫blica BTC",
			"stellar_pub_key_label":"Clave p√∫blica estelar",
			"stellar_private_key_label":"Claves privadas estelares",
			"spn_we_are_unable_to_generate_nmonic_label":"El sistema no puede crear ning√∫n c√≥digo mnemot√©cnico con la clave privada existente.",
			"spn_always_use_private_key":"Siempre debe usar la clave privada para firmar la transacci√≥n.",
			"register_label_2":"Registro",
			"select_wallet_asset_label":"Seleccionar Activo de Monedero",
			"spn_create_wallet_btn":"Crear billetera",
			"spn_bitcoin_and_stellar_keys":"Claves Bitcoin y Stellar",
			"bitcoin_address_45":"direcci√≥n de Bitcoin",
			"btc_public_key_label":"Clave p√∫blica BTC",
			"btc_private_key_label":"Clave privada BTC",
			"stellar_public_key_label":"Clave p√∫blica estelar",
			"stellar_private_key_34":"Clave privada estelar",
			"modal_close_btn_label":"Cerca",
			"modal_click_copy_btn_label":"Haga clic para copiar",
			"modal_title_stellar_keys":"Llaves estelares",
			"stellar_public_label_25":"Clave p√∫blica estelar",
			"stellar_private_key_label_25":"Clave privada estelar",
			"modal_footer_close_btn_label":"Cerca",
			"modal_footer_copy_btn_label":"Haga clic para copiar",
			"data-validation-error-swal-header":"Ups..",
			"data-validation-error-failed-to-get-details":"Error al obtener detalles",
			"data-validation-problem-with-connection":"problema con la conexion",
			"data-validation-check-your-data":"Por favor revisa tus datos",
			"data-validation-select-one-these":"Seleccione uno de estos",
			"data-validation-checkbox-before-you-proceed":"Seleccione la casilla de verificaci√≥n antes de continuar",
			"copy-confirmation-text":"Verifique para confirmar que ha copiado los c√≥digos en la secuencia correcta.",
			"data-great-text":"¬°Excelente!",
			"data-thumbs-up-text":"¬°Pulgares arriba, genial!",
			"mnemonic-not-generate-text":"No hay c√≥digo mnemot√©cnico generado",
			"data-validation-mnemonic-code":"Esto es requerido",
			"data-validation-btc-address":"Por favor ingrese la direcci√≥n BTC",
			"data-validation-btc-public-key":"Ingrese la clave p√∫blica de BTC",
			"data-validation-check-box":"Por favor marque esta casilla",
			"data-validation-public-key":"Ingrese la clave p√∫blica",
			"data-validation-private-key":"Ingrese la clave privada",
			"wallet-creation-header":"Creaci√≥n de billetera",
			"non-custodial-wallet-header":"Tenga en cuenta que vamos a crear billeteras Pporte, VESL, BTCx y USDC. Las Carteras no tienen custodia.",
			"enter-your-passsword-tittle":"Ingresa tu contrase√±a",
			"enter-your-passsword-label":"Clave",
			"data-validation-enter-your-passsword-label":"¬°Por favor ingrese su contrase√±a!",
			"copy-stellar-bitcoin-keys-label":"Copia de claves Stellar y Bitcoin",
			"copy-success-label":"Ha copiado con √©xito las claves Stellar y Bitcoin, pegue y almacene en un lugar seguro",
			"data-validation-enter-your-passsword-label":"Ha copiado con √©xito las claves Stellar y Bitcoin, pegue y almacene en un lugar seguro",
			"data-validation-select-asset-coin":"Seleccione la moneda de activo",
			"data-validation-select-asset-coin-desc":"Ingrese la descripci√≥n del activo",
			"data-validation-wallet-desc":"Se requiere la descripci√≥n de la billetera",
			"data-validation-asset":"Se requiere activo",
			"data-validation-password-input":"¬°Por favor ingrese su contrase√±a!",
			"data-validation-pvt-input":"¬°Ingrese su clave privada!",
			"spn_user_wallet_name_label":"Nombre de billetera de usuario",
			"setup_label":"Para configurar su billetera bitcoin y estelar, responda las siguientes preguntas",
			"proceed_label":"y contin√∫a con los pasos requeridos:",
			}
		},
	}
  }, function(err, t) {
	   updateContent();
  });
  
  function updateContent() {
        /* Menus */
        $('#idnavmenu_Dashboard').text(i18next.t('idnavmenu_Dashboard')); 
        $('#idnavmenu_ManageFiatWallet').text(i18next.t('idnavmenu_ManageFiatWallet')); 
        $('#idnavmenu_DigitalAssets').text(i18next.t('idnavmenu_DigitalAssets')); 
        $('#idnavmenu_CurrencyRemittance').text(i18next.t('idnavmenu_CurrencyRemittance')); 
        $('#idnavmenu_ManageCards').text(i18next.t('idnavmenu_ManageCards')); 
        $('#idnavmenu_Loyalty').text(i18next.t('idnavmenu_Loyalty')); 
        $('#idnavmenu_UpdatePlan').text(i18next.t('idnavmenu_UpdatePlan')); 
        $('#idnavmenu_Logout').text(i18next.t('idnavmenu_Logout')); 
        $('#idnavmenu_BuyNewPlan').text(i18next.t('idnavmenu_BuyNewPlan')); 
        $('#header_buy_porte_token').text(i18next.t('header_buy_porte_token')); 
        $('#btn_buy_coin').text(i18next.t('btn_buy_coin')); 
        $('#idnavmenu_Profile').text(i18next.t('idnavmenu_Profile')); 
        $('#idnavmenu_Disputes').text(i18next.t('idnavmenu_Disputes')); 
        /* Sub Menus */
        $('#idnavsubmenu_Dashboard').text(i18next.t('idnavsubmenu_Dashboard')); 
        $('#idnavsubmenu_ViewandEdit').text(i18next.t('idnavsubmenu_ViewandEdit')); 
        $('#idnavsubmenu_ViewWallet').text(i18next.t('idnavsubmenu_ViewWallet')); 
        $('#idnavsubmenu_TopupWallet').text(i18next.t('idnavsubmenu_TopupWallet')); 
        $('#idnavsubmenu_SendMoney').text(i18next.t('idnavsubmenu_SendMoney')); 
        $('#idnavsubmenu_CashTransactions').text(i18next.t('idnavsubmenu_CashTransactions')); 
        $('#idnavsubmenu_SetupWallet').text(i18next.t('idnavsubmenu_SetupWallet')); 
        $('#idnavsubmenu_Bitcoin').text(i18next.t('idnavsubmenu_Bitcoin')); 
        $('#idnavsubmenu_Assets').text(i18next.t('idnavsubmenu_Assets')); 
        $('#idnavsubmenu_BuyAsset').text(i18next.t('idnavsubmenu_BuyAsset')); 
        $('#idnavsubmenu_TransferCoin').text(i18next.t('idnavsubmenu_TransferCoin')); 
        $('#idnavsubmenu_Swap').text(i18next.t('idnavsubmenu_Swap')); 
        $('#idnavsubmenu_SellAssettoFiat').text(i18next.t('idnavsubmenu_SellAssettoFiat')); 
        $('#idnavsubmenu_DisplayTransactions').text(i18next.t('idnavsubmenu_DisplayTransactions')); 
        $('#idnavsubmenu_DigitalRemittance').text(i18next.t('idnavsubmenu_DigitalRemittance')); 
        $('#idnavsubmenu_FiatRemittance').text(i18next.t('idnavsubmenu_FiatRemittance')); 
        $('#idnavsubmenu_ShowCards').text(i18next.t('idnavsubmenu_ShowCards')); 
        $('#idnavsubmenu_RedeemPoints').text(i18next.t('idnavsubmenu_RedeemPoints')); 
        $('#idnavsubmenu_ViewDispute').text(i18next.t('idnavsubmenu_ViewDispute')); 
        $('#idnavsubmenu_RaiseDisputes').text(i18next.t('idnavsubmenu_RaiseDisputes')); 
        $('#idnavsubmenu_ChangeYourPlan').text(i18next.t('idnavsubmenu_ChangeYourPlan')); 
        $('#idnavsubmenu_BuyNewPlan').text(i18next.t('idnavsubmenu_BuyNewPlan')); 
        /* Quick links */
        $('#idnav_UserSettings').text(i18next.t('idnav_UserSettings'));        
        $('#idnav_UpdateProfile').text(i18next.t('idnav_UpdateProfile'));        
        $('#idnav_Logout').text(i18next.t('idnav_Logout'));        
        /* Specific Page Content */
       // $('#greeting').text(i18next.t('greeting'));
        $('#breadcrumb-item-digital-assets').text(i18next.t('breadcrumb-item-digital-assets'));
        $('#breadcrumb-item-set-up-wallet').text(i18next.t('breadcrumb-item-set-up-wallet'));
        $('#card-title-set-up-wallet').text(i18next.t('card-title-set-up-wallet'));
        $('#tab-header-generate-seed-phase').text(i18next.t('tab-header-generate-seed-phase'));
        $('#tab-header-create-wallet').text(i18next.t('tab-header-create-wallet'));
        $('#question_label').text(i18next.t('question_label'));
        $('#yes_label').text(i18next.t('yes_label'));
        $('#no_label').text(i18next.t('no_label'));
        $('#checkbox_label').text(i18next.t('checkbox_label'));
        $('#register_label').text(i18next.t('register_label'));
        $('#register_label_reg').text(i18next.t('register_label_reg'));
        $('#scroll-header-label').text(i18next.t('scroll-header-label'));
        $('#spn_pragraph_words').text(i18next.t('spn_pragraph_words'));
        $('#spn_previous_btn').text(i18next.t('spn_previous_btn'));
        $('#next_btn').text(i18next.t('next_btn'));
        $('#confirmation-check-box-label').text(i18next.t('confirmation-check-box-label'));
        $('#spn_we_dont_store_private').text(i18next.t('spn_we_dont_store_private'));
        $('#register_label').text(i18next.t('register_label'));
        $('#question_label_1').text(i18next.t('question_label_1'));
        $('#yes_label_1').text(i18next.t('yes_label_1'));
        $('#no_label_1').text(i18next.t('no_label_1'));
        $('#1st_to_4th_word').text(i18next.t('1st_to_4th_word'));
        $('#5th_to_8th_word').text(i18next.t('5th_to_8th_word'));
        $('#9th_to_12th_word').text(i18next.t('9th_to_12th_word'));
        $('#btc_account_details').text(i18next.t('btc_account_details'));
        $('#stellar_account_details').text(i18next.t('stellar_account_details'));
        $('#1st_mnemonic_code').text(i18next.t('1st_mnemonic_code'));
        $('#2nd_mnemonic_code').text(i18next.t('2nd_mnemonic_code'));
        $('#3rd_mnemonic_code').text(i18next.t('3rd_mnemonic_code'));
        $('#4th_mnemonic_code').text(i18next.t('4th_mnemonic_code'));
        $('#5th_mnemonic_code').text(i18next.t('5th_mnemonic_code'));
        $('#6th_mnemonic_code').text(i18next.t('6th_mnemonic_code'));
        $('#7th_mnemonic_code').text(i18next.t('7th_mnemonic_code'));
        $('#8th_mnemonic_code').text(i18next.t('8th_mnemonic_code'));
        $('#9th_mnemonic_code').text(i18next.t('9th_mnemonic_code'));
        $('#10th_mnemonic_code').text(i18next.t('10th_mnemonic_code'));
        $('#11th_mnemonic_code').text(i18next.t('11th_mnemonic_code'));
        $('#12th_mnemonic_code').text(i18next.t('12th_mnemonic_code'));
        $('#Enter_bitcoin_details').text(i18next.t('Enter_bitcoin_details'));
        $('#spn_dont_store_cvv').text(i18next.t('spn_dont_store_cvv'));
        $('#btc_address_label').text(i18next.t('btc_address_label'));
        $('#public_key_label').text(i18next.t('public_key_label'));
        $('#checkbox_label_1').text(i18next.t('checkbox_label_1'));
        $('#btc_address_label_1').text(i18next.t('btc_address_label_1'));
        $('#password_key_label_1').text(i18next.t('password_key_label_1'));
        $('#stellar_pub_key_label').text(i18next.t('stellar_pub_key_label'));
        $('#stellar_private_key_label').text(i18next.t('stellar_private_key_label'));
        $('#spn_we_are_unable_to_generate_nmonic_label').text(i18next.t('spn_we_are_unable_to_generate_nmonic_label'));
        $('#spn_always_use_private_key').text(i18next.t('spn_always_use_private_key'));
        $('#register_label_2').text(i18next.t('register_label_2'));
        $('#select_wallet_asset_label').text(i18next.t('select_wallet_asset_label'));
        $('#spn_create_wallet_btn').text(i18next.t('spn_create_wallet_btn'));
        $('#spn_bitcoin_and_stellar_keys').text(i18next.t('spn_bitcoin_and_stellar_keys'));
        $('#bitcoin_address_45').text(i18next.t('bitcoin_address_45'));
        $('#btc_public_key_label').text(i18next.t('btc_public_key_label'));
        $('#btc_private_key_label').text(i18next.t('btc_private_key_label'));
        $('#stellar_public_key_label').text(i18next.t('stellar_public_key_label'));
        $('#stellar_private_key_34').text(i18next.t('stellar_private_key_34'));
        $('#modal_close_btn_label').text(i18next.t('modal_close_btn_label'));
        $('#modal_title_stellar_keys').text(i18next.t('modal_title_stellar_keys'));
        $('#stellar_public_label_25').text(i18next.t('stellar_public_label_25'));
        $('#stellar_private_key_label_25').text(i18next.t('stellar_private_key_label_25'));
        $('#modal_footer_close_btn_label').text(i18next.t('modal_footer_close_btn_label'));
        $('#modal_footer_copy_btn_label').text(i18next.t('modal_footer_copy_btn_label'));
        $('#data-validation-error-swal-header').text(i18next.t('data-validation-error-swal-header'));
        $('#data-validation-error-failed-to-get-details').text(i18next.t('data-validation-error-failed-to-get-details'));
        $('#data-validation-problem-with-connection').text(i18next.t('data-validation-problem-with-connection'));
        $('#data-validation-check-your-data').text(i18next.t('data-validation-check-your-data'));
        $('#data-validation-select-one-these').text(i18next.t('data-validation-select-one-these'));
        $('#data-validation-checkbox-before-you-proceed').text(i18next.t('data-validation-checkbox-before-you-proceed'));
        $('#copy-confirmation-text').text(i18next.t('copy-confirmation-text'));
        $('#data-great-text').text(i18next.t('data-great-text'));
        $('#data-thumbs-up-text').text(i18next.t('data-thumbs-up-text'));
        $('#mnemonic-not-generate-text').text(i18next.t('mnemonic-not-generate-text'));
        $('#data-validation-mnemonic-code').text(i18next.t('data-validation-mnemonic-code'));
        $('#data-validation-btc-address').text(i18next.t('data-validation-btc-address'));
        $('#data-validation-check-box').text(i18next.t('data-validation-check-box'));
        $('#data-validation-public-key').text(i18next.t('data-validation-public-key'));
        $('#data-validation-private-key').text(i18next.t('data-validation-private-key'));
        $('#wallet-creation-header').text(i18next.t('wallet-creation-header'));
        $('#non-custodial-wallet-header').text(i18next.t('non-custodial-wallet-header'));
        $('#enter-your-passsword-tittle').text(i18next.t('enter-your-passsword-tittle'));
        $('#enter-your-passsword-label').text(i18next.t('enter-your-passsword-label'));
        $('#data-validation-enter-your-passsword-label').text(i18next.t('data-validation-enter-your-passsword-label'));
        $('#copy-stellar-bitcoin-keys-label').text(i18next.t('copy-stellar-bitcoin-keys-label'));
        $('#copy-success-label').text(i18next.t('copy-success-label'));
        $('#data-validation-enter-your-passsword-label').text(i18next.t('data-validation-enter-your-passsword-label'));
        $('#data-validation-select-asset-coin').text(i18next.t('data-validation-select-asset-coin'));
        $('#data-validation-select-asset-coin-desc').text(i18next.t('data-validation-select-asset-coin-desc'));
        $('#data-validation-wallet-desc').text(i18next.t('data-validation-wallet-desc'));
        $('#data-validation-asset').text(i18next.t('data-validation-asset'));
        $('#data-validation-password-input').text(i18next.t('data-validation-password-input'));
        $('#data-validation-pvt-input').text(i18next.t('data-validation-pvt-input'));
        $('#spn_user_wallet_name_label').text(i18next.t('spn_user_wallet_name_label'));
        $('#setup_label').text(i18next.t('setup_label'));
        $('#proceed_label').text(i18next.t('proceed_label'));
  }
	  function fnChangePageLanguage(lng){
		console.log('lng ',lng);
		  i18next.changeLanguage(lng, fnChangeLanguage(lng))
		  $('#hdnlangpref').val(lng);
	  }
	  i18next.on('languageChanged', function(lng) {
		updateContent(lng);
	  });
	  function fnChangeLanguage(lang){
		  if(lang=='EN')  $('#lang_def').text('EN') 
			else if(lang=='ES')  $('#lang_def').text('ES')
	  }


$(window).on("load", function(e) {
    $("#global-loader").fadeOut("slow");
})

var jsonStringData;
function fnBitcoinPresent(select){

	if(select ==='Yes'){
		 $('#stellar-present').show();
         $('#stellar-not-present').hide();
		document.getElementById( 'hide_stellar' ).style.display = 'none';
	}else{
		$('#stellar-present').hide();
		$('#stellar-not-present').show();
	}
}
function fmnemoniccodePresent(select){
	if(select ==='Yes'){
		 $('#mnemonic-present').removeClass("hidden");
	 	$('#stellar-account-choice').addClass("hidden");
		$('#mnemoni-not-present').addClass("hidden");
		document.getElementById( 'hide_stellar' ).style.display = 'none';
	}else{
		$('#mnemoni-not-present').removeClass("hidden");
		$('#mnemonic-present').addClass("hidden");
		$('#stellar-account-choice').addClass("hidden");
		document.getElementById( 'hide_stellar' ).style.display = 'none';
	}
}
function fnUserHasBTCAccount(select){
	if(select ==='Y'){
		$('#div_btc_inputs').show();
	}else{
		$('#div_btc_inputs').hide();
	}

}

function fnUserHasStellarAccountSetUpWallet(select){
	if(select ==='Y'){
		$('#div_stellar_public_key').show();
	}else{
		$('#div_stellar_public_key').hide();
	}
}
function fnRegisterMneumonicSetUpWallet(){
	$( "#register-mnemonic" ).validate( {
        ignore: [],
        rules: {
            has_account: {
                required: true
            },
            create_stellar: {
                required:true
            },
           
        },
        messages: {
            has_account: {
                required: $('#data-validation-select-one-these').text(),
            },
          
            create_stellar: {
                required: $('#data-validation-checkbox-before-you-proceed').text(),
            },
          
        },
          errorElement: "em",
        errorPlacement: function ( error, element ) {
            // Add the `invalid-feedback` class to the error element
            error.addClass( "invalid-feedback" );
            if ( element.prop( "type" ) === "checkbox" ) {
                error.insertAfter( element.next( "label" ) );
            } else {
                error.insertAfter( element );
            }
        },
        highlight: function ( element, errorClass, validClass ) {
            $( element ).addClass( "is-invalid" ).removeClass( "is-valid" );
        },
        unhighlight: function (element, errorClass, validClass) {
            $( element ).addClass( "is-valid" ).removeClass( "is-invalid" );
        }
    });
	if($( "#register-mnemonic" ).valid()){
		console.log("I am getting here")
        	$('#spinner-div').show();//Load button clicked show spinner
			$('#register-mnemonic input[name="qs"]').val('btc');
      		$('#register-mnemonic input[name="rules"]').val('create_bitcoin_mnemocic_code');
    		var formData = new FormData($('#register-mnemonic')[0]);
		     $.ajaxSetup({
		            beforeSend: function(xhr) {
		                xhr.setRequestHeader('x-api-key' , getAPIKey());
		            }
		        });
            $.ajax({
                url: "ms",
                data: formData,
                processData: false,
                contentType: false,
                type: 'POST',
                success: function (result) {
                    $('#spinner-div').hide();//Request is complete so hide spinner
                    var data = JSON.parse(result);
                    console.log('data ',data);
                    if(data.error=='false'){
						var jsonObjData = data.data;
						jsonStringData = JSON.stringify(jsonObjData);
						var mnemonicArray = jsonObjData.mnemonic_code;
						if(mnemonicArray.length>0){
							$('#first_corousel').append(mnemonicArray[0]);
							$('#second_corousel').append(mnemonicArray[1]);
							$('#third_corousel').append(mnemonicArray[2]);
							$('#fourth_corousel').append(mnemonicArray[3]);
							$('#fifth_corousel').append(mnemonicArray[4]);
							$('#sixth_corousel').append(mnemonicArray[5]);
							$('#seventh_corousel').append(mnemonicArray[6]);
							$('#eighth_corousel').append(mnemonicArray[7]);
							$('#nineth_corousel').append(mnemonicArray[8]);
							$('#10th_corousel').append(mnemonicArray[9]);
							$('#11th_corousel').append(mnemonicArray[10]);
							$('#12th_corousel').append(mnemonicArray[11]);
							$("#mneumonic_card").removeClass("hidden");
							$("#hide_stellar").addClass("hidden");
							//$("#btn_register_btc").prop("disabled", true);
						}else{
							`<p>`+$('#mnemonic-not-generate-text').text()+`</p>`
						}
                    }else{
                        Swal.fire({
                            text: data.message, 
                            icon: "error",
                            showConfirmButton: true,
                            confirmButtonText: "Ok",
                            }).then(function() {
                                
                            });	
                    }
                },
                error: function() {
                    Swal.fire({
                                icon: 'error',
                                title: $('#data-validation-error-swal-header').text(),
                                text: $('#data-validation-problem-with-connection').text(),
                                showConfirmButton: true,
                                confirmButtonText: "Ok",
                                }).then(function() {
                                    
                        });
                }
            });             	
    }
}
	console.log("Inside fnConfirmMneumonic ")
	var first_mnemonic =document.getElementById('first_corousel').innerHTML;
	console.log("first_mnemonic",first_mnemonic)
 	var second_corousel =document.getElementById('second_corousel').innerHTML;
	var third_corousel =document.getElementById('third_corousel').innerHTML;
	var fourth_corousel =document.getElementById('fourth_corousel').innerHTML;
	var fifth_corousel =document.getElementById('fifth_corousel').innerHTML;
	var sixth_corousel =document.getElementById('sixth_corousel').innerHTML;
	var seventh_corousel =document.getElementById('seventh_corousel').innerHTML;
	var eighth_corousel =document.getElementById('eighth_corousel').innerHTML;
	var nineth_corousel =document.getElementById('nineth_corousel').innerHTML;
	var tenth_corousel =document.getElementById('10th_corousel').innerHTML;
	var eleventh_corousel =document.getElementById('11th_corousel').innerHTML;
	var twelfth_corousel =document.getElementById('12th_corousel').innerHTML;
	var arr=first_mnemonic.concat(", ",second_corousel,", ",third_corousel,", ",fourth_corousel,", ",fifth_corousel,", ",sixth_corousel,", ",seventh_corousel,
	", ",eighth_corousel,", ",nineth_corousel,", ",tenth_corousel,", ",eleventh_corousel,", ",twelfth_corousel)
		
function fnConfirmMneumonicSetUpWallet(){
		Swal.fire({
		  text: arr,
		  icon: 'info',
		  html:
		  $('#copy-confirmation-text').text(),
		  showCloseButton: true,
		  focusConfirm: false,
		  confirmButtonText:
		    '<i class="fa fa-thumbs-up"></i>'+$('#data-great-text').text()+'',
		  confirmButtonAriaLabel: $('#data-thumbs-up-text').text()
		}).then(function() {
				$("#div_btn_reg_stellar").removeClass("hidden");
				$("input[name='saved_mneumonic']:checked").val()==="true";  
         });
}

function fnRegisterBitcoinNewAccountSetUpWallet(passwordVal){
	$( "#register-bitcoin" ).validate( {
        ignore: [],
        rules: {
			
            saved_mneumonic: {
               required:true,
            },
            password: {
                required:true
            },
           
        },
        messages: {
          
            saved_mneumonic: {
                required: $('#data-validation-checkbox-before-you-proceed').text(),
            },          
            password: {
                required: $('#data-validation-password-validation').text(),
            },
          
        },
          errorElement: "em",
        errorPlacement: function ( error, element ) {
            // Add the `invalid-feedback` class to the error element
            error.addClass( "invalid-feedback" );
            if ( element.prop( "type" ) === "checkbox" ) {
                error.insertAfter( element.next( "label" ) );
            } else {
                error.insertAfter( element );
            }
        },
        highlight: function ( element, errorClass, validClass ) {
            $( element ).addClass( "is-invalid" ).removeClass( "is-valid" );
        },
        unhighlight: function (element, errorClass, validClass) {
            $( element ).addClass( "is-valid" ).removeClass( "is-invalid" );
        }
    });
    if($( "#register-bitcoin" ).valid()){
        $('#spinner-div').show();//Load button clicked show spinner
             $('#register-bitcoin input[name="qs"]').val('btc');
      		 $('#register-bitcoin input[name="rules"]').val('add_bitcoin_new_account');
       		 var formData = new FormData($('#register-bitcoin')[0]);
            formData.append("data", jsonStringData);
			formData.append('security', passwordVal);
        for (var pair of formData.entries()) {
         console.log(pair[0] + " - " + pair[1]);
        }	
        	
		     $.ajaxSetup({
		            beforeSend: function(xhr) {
		                xhr.setRequestHeader('x-api-key' , getAPIKey());
		            }
		        });
            $.ajax({
                url: "ms",
                data: formData,
                processData: false,
                contentType: false,
                type: 'POST',
                success: function (result) {
                    $('#spinner-div').hide();//Request is complete so hide spinner
                    var data = JSON.parse(result);
                    console.log('data ',data);
					var htmlData='';
                    if(data.error=='false'){
						$("#cardavailable").removeClass("hidden");
							//Modal
							$('#showResultsModal').on('show.bs.modal', function() {
								console.log("opening modal")
								$('#idbitcoinaddress').val(data.btc_address);
								$('#idbtcpublickkey').val(data.btc_pub_key);
								$('#idbtcprivatekey').val(data.btc_piv_key);
								$('#idstlpublickkey').val(data.stellar_pub_key);
								$('#idstlprivatekey').val(data.stellar_piv_key);
							});
							$('#showResultsModal').modal('show');
                    }else{
                        Swal.fire({
                            text: data.message, 
                            icon: "error",
                            showConfirmButton: true,
                            confirmButtonText: "Ok",
                            }).then(function() {
                                
                            });	
                    }
                },

               error: function(jqXHR, textStatus, errorThrown) {
					console.log("jqXHR ",jqXHR);
					console.log("textStatus ",textStatus);
					console.log("errorThrown ",errorThrown);

                    Swal.fire({
                                icon: 'error',
                                title: $('#data-validation-error-swal-header').text(),
                                text: $('#data-validation-problem-with-connection').text(),
                                showConfirmButton: true,
                                confirmButtonText: "Ok",
                                }).then(function() {
                                    
                        });
						
                }
            });             	
    }

}

function fnResetPage(){
			  $('#form-leftmenu').attr('action', 'ws');
              $('input[name="qs"]').val('porte');
              $('input[name="rules"]').val('Set up Wallet');
              $('#form-leftmenu input[name="hdnlang"]').val($('#lang_def').text());
              $("#form-leftmenu").submit();
		  }

(function($) {
		"use strict";
		// Toolbar extra buttons
		var btnFinish = $('<button></button>').text('Finish')
			.addClass('btn btn-success')
			.on('click', function(){
				//alert("Submit clicked")
				 
				fnPasswordWithMnemonicSetUpWallet();
				return false;
				
			});
		var btnCancel = $('<button></button>').text('Cancel')
			.addClass('btn btn-danger')
			.on('click', function(){
				// Reset Page
					fnResetPage();
					return false;
			 });
	
	
		// Smart Wizard
		$('#smartwizard').smartWizard({
				selected: 0,
				theme: 'default',
				transitionEffect:'fade',
				showStepURLhash: true,
				toolbarSettings: {
						toolbarButtonPosition: 'end',
						toolbarExtraButtons: [btnFinish, btnCancel]
								}
		});
			
		// Arrows Smart Wizard 1
		$('#smartwizard-1').smartWizard({
				selected: 0,
				theme: 'arrows',
				transitionEffect:'fade',
				showStepURLhash: false,
				toolbarSettings: {
								  toolbarExtraButtons: [btnFinish, btnCancel]
								}
		});
				
		// Circles Smart Wizard 1
		$('#smartwizard-2').smartWizard({
				selected: 0,
				theme: 'circles',
				transitionEffect:'fade',
				showStepURLhash: false,
				toolbarSettings: {
								  toolbarExtraButtons: [btnFinish, btnCancel]
								}
		});
				
		// Dots Smart Wizard 1
		$('#smartwizard-3').smartWizard({
				selected: 0,
				theme: 'dots',
				transitionEffect:'fade',
				showStepURLhash: false,
				toolbarSettings: {
								  toolbarExtraButtons: [btnFinish, btnCancel]
								}
		});
		
	})(jQuery); 
	function fnSubmitFormSetUpWallet(passwordVal){
	  	 
 	

	
	  			$('#register-has-mnemonic-code input[name="qs"]').val('btc');
				  $('#register-has-mnemonic-code input[name="rules"]').val('link_account_with_mnemonic_code');
					  var formData = new FormData($('#register-has-mnemonic-code')[0]);
					//   formData.append("relno",relno);
					formData.append("security", passwordVal );
					/*  for (var pair of formData.entries()) {
						  console.log(pair[0] + " - " + pair[1]);
						} */		
				  // Call Ajax here and submit the form 							
							$.ajaxSetup({
							  beforeSend: function(xhr) {
								  xhr.setRequestHeader('x-api-key' , getAPIKey());
							  }
						  });
						  $.ajax({
							  url: 'ms',
							  data: formData,
							  processData: false,
							  contentType: false,
							  type: 'POST',
							  success: function (result) {
								  if (result) {
									  var data = JSON.parse(result);
									   if(data.error=='false'){
										$("#stlcardavailable").removeClass("hidden");
										//Modal
										$('#showStlResultsModal').on('show.bs.modal', function() {
											console.log("opening modal")
											$('#stlidpublickkey').val(data.stellar_pub_key);
											$('#stlidprivatekey').val(data.stellar_piv_key);
										});
										$('#showStlResultsModal').modal('show');
										   }else{
										    Swal.fire({
				                            text: data.message, 
				                            icon: "error",
				                            showConfirmButton: true,
				                            confirmButtonText: "Ok",
				                            }).then(function() {
				                                
				                            });		
										   } 
								  }
							   },
							   error: function() {
								  Swal.fire({
											  icon: 'error',
											  title: $('#data-validation-error-swal-header').text(),
											  text: $('#data-validation-problem-with-connection').text(),
											  showConfirmButton: true,
											  confirmButtonText: "Ok",
											  closeOnConfirm: true,
											  }).then(function() {
												 
									  });
							  }
						  });
				  
		
	
}

function fnLinkBitcoinAccountSetUpWallet(passwordVal){

        $('#spinner-div').show();//Load button clicked show spinner
             $('#has_no_mnenmonic_code input[name="qs"]').val('btc');
      		 $('#has_no_mnenmonic_code input[name="rules"]').val('link_btc_without_mnemonic');
       		 var formData = new FormData($('#has_no_mnenmonic_code')[0]);
			 formData.append("security",passwordVal);
        for (var pair of formData.entries()) {
         console.log(pair[0] + " - " + pair[1]);
        }	
        	
		     $.ajaxSetup({
		            beforeSend: function(xhr) {
		                xhr.setRequestHeader('x-api-key' , getAPIKey());
		            }
		        });
            $.ajax({
                url: "ms",
                data: formData,
                processData: false,
                contentType: false,
                type: 'POST',
                success: function (result) {
                   $('#spinner-div').hide();//Request is complete so hide spinner
                    var data = JSON.parse(result);
                    console.log('data ',data);
                    if(data.error=='false'){
                        Swal.fire({
                            icon: 'success',
                            text:  data.message,
                            showConfirmButton: true,
                            confirmButtonText: "Ok",
                        }).then(function() {
                           $('#register-bitcoin').attr('action', 'ws');
	                        $('input[name="qs"]').val('porte');
	                        $('input[name="rules"]').val('Assets');
	                        $("#register-bitcoin").submit();
                        });	
                    }else{
                        Swal.fire({
                            text: data.message, 
                            icon: "error",
                            showConfirmButton: true,
                            confirmButtonText: "Ok",
                            }).then(function() {
                                
                            });	
                    }
                },
                error: function() {
                    Swal.fire({
                                icon: 'error',
                                title: $('#data-validation-error-swal-header').text(),
                                text: $('#data-validation-problem-with-connection').text(),
                                showConfirmButton: true,
                                confirmButtonText: "Ok",
                                }).then(function() {
                                    
                        });
                }
            });             	


}
function fnPasswordSetUpNewWallet(){
	// Do Validation Here
	$( "#register-bitcoin" ).validate( {
        ignore: [],
        rules: {
			
            saved_mneumonic: {
               required:true,
            },
           
           
        },
        messages: {
          
            saved_mneumonic: {
                required: $('#data-validation-checkbox-before-you-proceed').text(),
            },          
          
        },
          errorElement: "em",
        errorPlacement: function ( error, element ) {
            // Add the `invalid-feedback` class to the error element
            error.addClass( "invalid-feedback" );
            if ( element.prop( "type" ) === "checkbox" ) {
                error.insertAfter( element.next( "label" ) );
            } else {
                error.insertAfter( element );
            }
        },
        highlight: function ( element, errorClass, validClass ) {
            $( element ).addClass( "is-invalid" ).removeClass( "is-valid" );
        },
        unhighlight: function (element, errorClass, validClass) {
            $( element ).addClass( "is-valid" ).removeClass( "is-invalid" );
        }
    });
    if($( "#register-bitcoin" ).valid()){
		Swal.fire({
                    title: $('#wallet-creation-header').text(),
                    text: $('#non-custodial-wallet-header').text(),
                    showConfirmButton: true,
                    confirmButtonText: "Ok",
                    }).then(function() {
                        const { value: password   } = Swal.fire({
						title: $('#enter-your-passsword-tittle').text(),
						input: 'password',
						inputLabel:  $('#enter-your-passsword-label').text(),
						showCancelButton: true,
						inputAttributes: {
						autocapitalize: 'off',
						autocorrect: 'off'
						},
						inputValidator: (value) => {
						if (!value) {
							return $('#data-validation-enter-your-passsword-label').text();
						}
						}
					}).then((result) => {
						if (result.value) {
							var passwordVal = result.value;
							
								fnRegisterBitcoinNewAccountSetUpWallet(passwordVal);
										
						}
					});
            });
	}else{
		 Swal.fire({
								  icon: 'error',
								  title: $('#data-validation-error-swal-header').text(),
								  text: $('#data-validation-check-your-data').text(),
								  showConfirmButton: true,
								  confirmButtonText: "Ok",
								  closeOnConfirm: true,
								  }).then(function() {
									 
						  });
					  return false;
	}
}
function fnPasswordSetUpWallet(){
	// Do Validation Here
		$( "#has_no_mnenmonic_code" ).validate( {
        ignore: [],
        rules: {
			has_account: {
                required: true
            },
            btc_address: {
               required:true,
            },
            btc_public_key: {
                required:true
            },
			stellar_public_key:{
				required:true
			},
			stellar_private_key:{
				required:true
			}
           
        },
        messages: {
            has_account: {
                required: $('#data-validation-select-one-these').text(),
            },
            btc_address: {
                required: $('#data-validation-btc-address').text(),
            },          
            btc_public_key: {
                required: $('#data-validation-public-key').text(),
            },
			stellar_public_key:{
				required:  $('#data-validation-public-key').text(),
			},
			stellar_private_key:{
				required: $('#data-validation-public-key').text(),
			},
        },
          errorElement: "em",
        errorPlacement: function ( error, element ) {
            // Add the `invalid-feedback` class to the error element
            error.addClass( "invalid-feedback" );
            if ( element.prop( "type" ) === "checkbox" ) {
                error.insertAfter( element.next( "label" ) );
            } else {
                error.insertAfter( element );
            }
        },
        highlight: function ( element, errorClass, validClass ) {
            $( element ).addClass( "is-invalid" ).removeClass( "is-valid" );
        },
        unhighlight: function (element, errorClass, validClass) {
            $( element ).addClass( "is-valid" ).removeClass( "is-invalid" );
        }
    });

    if($( "#has_no_mnenmonic_code" ).valid()){
			Swal.fire({
                    title: $('#wallet-creation-header').text(),
                    text: $('#non-custodial-wallet-header').text(),
                    showConfirmButton: true,
                    confirmButtonText: "Ok",
                    }).then(function() {
                        const { value: password   } = Swal.fire({
						title: $('#enter-your-passsword-tittle').text(),
						input: 'password',
						inputLabel:  $('#enter-your-passsword-label').text(),
						showCancelButton: true,
						inputAttributes: {
						autocapitalize: 'off',
						autocorrect: 'off'
						},
						inputValidator: (value) => {
						if (!value) {
							return $('#data-validation-enter-your-passsword-label').text();
						}
						}
					}).then((result) => {
						if (result.value) {
							var passwordVal = result.value;
							
								checkIfPasswordIsCorrect(passwordVal);
											
						}
					});
            });
		}else{
			  Swal.fire({
								  icon: 'error',
								  title: $('#data-validation-error-swal-header').text(),
								  text: $('#data-validation-check-your-data').text(),
								  showConfirmButton: true,
								  confirmButtonText: "Ok",
								  closeOnConfirm: true,
								  }).then(function() {
									 
						  });
					  return false;
				  }
		
	}

	function fnPasswordWithMnemonicSetUpWallet(){
		// Validate data here:-
		$( "#register-has-mnemonic-code" ).validate( {
		rules: {
			first_code: {
				required: true
			},
			second_code: {
				required: true,
			},
			third_code: {
				required: true,
			}, 
			fourth_code: {
				required: true,
			},
			fifth_code: {
				required: true,
			},
			sixth_code: {
				required: true,
			},
			seventh_code: {
				required: true
			},
			eight_code: {
				required: true
			},
			nineth_code: {
				required: true
			},
			tenth_code: {
				required: true
			},
			eleventh_code: {
				required: true
			},
			twelve_code: {
				required: true
			},
			 has_mnemonic: {
                required: true
            },
			input_btc_address:{
				required: true
			},
			input_btc_pubkey:{
				required: true
			},
			generate_stellar_account:{
				required: true
			}
		},
		messages: {
			first_code: {
				required: $('#data-validation-mnemonic-code').text()
			},
			second_code: {
				required: $('#data-validation-mnemonic-code').text()
			},
			third_code: {
				required: $('#data-validation-mnemonic-code').text()
			},
			fourth_code: {
				required: $('#ddata-validation-mnemonic-code').text()
			},
			fifth_code: {
				required: $('#ddata-validation-mnemonic-code').text()
			},
			sixth_code: {
				required: $('#data-validation-mnemonic-code').text()
			},
			seventh_code: {
				required: $('#data-validation-mnemonic-code').text()
			},
			eight_code: {
				required: $('#data-validation-mnemonic-code').text()
			},
			nineth_code: {
				required: $('#data-validation-mnemonic-code').text()
			},
			tenth_code: {
				required: $('#data-validation-mnemonic-code').text()
			},
			eleventh_code: {
				required: $('#data-validation-mnemonic-code').text()
			},
			twelve_code: {
				required: $('#data-validation-mnemonic-code').text()
			},
			has_mnemonic: {
                required: $('#data-validation-select-one-these').text()
            },
			input_btc_address:{
				required: $('#data-validation-btc-address').text()
			},
			input_btc_pubkey:{
				required:  $('#data-validation-btc-public-key').text()
			},
			generate_stellar_account:{
				required: $('#data-validation-check-box').text()
			}
		},
		errorElement: "em",
		errorPlacement: function ( error, element ) {
			// Add the `invalid-feedback` class to the error element
			error.addClass( "invalid-feedback" );
			if ( element.prop( "type" ) === "checkbox" ) {
				error.insertAfter( element.next( "label" ) );
			} else {
				error.insertAfter( element );
			}
		},
		highlight: function ( element, errorClass, validClass ) {
			$( element ).addClass( "is-invalid" ).removeClass( "is-valid" );
		},
		unhighlight: function (element, errorClass, validClass) {
			$( element ).addClass( "is-valid" ).removeClass( "is-invalid" );
		}

	 });
 if($( "#register-has-mnemonic-code" ).valid()){
				Swal.fire({
                        title: $('#wallet-creation-header').text(),
                        text: $('#non-custodial-wallet-header').text(),
                        showConfirmButton: true,
                        confirmButtonText: "Ok",
                        }).then(function() {
                          const { value: password} = Swal.fire({
						title: $('#enter-your-passsword-tittle').text(),
						input: 'password',
						inputLabel: $('#enter-your-passsword-label').text(),
						showCancelButton: true,
						inputAttributes: {
						autocapitalize: 'off',
						autocorrect: 'off'
						},
						inputValidator: (value) => {
						if (!value) {
							return $('#data-validation-enter-your-passsword-label').text();
						}
						}
					}).then((result) => {
						if (result.value) {
							var passwordVal = result.value;
							fnSubmitFormSetUpWallet(passwordVal);
						}
					});  
                  });
	
		}else{
					  Swal.fire({
								  icon: 'error',
								  title: $('#data-validation-error-swal-header').text(),
								  text: $('#data-validation-check-your-data').text(),
								  showConfirmButton: true,
								  confirmButtonText: "Ok",
								  closeOnConfirm: true,
								  }).then(function() {
									 
						  });
					  return false;
				  }
}

var copyBtn = document.querySelector('#btncopy');
copyBtn.addEventListener('click', function () {
	console.log("Inside copy")
	$("#allinfo").removeClass("hidden");
	$("#allinfo").val("Bitcoin Adress: "+$("#idbitcoinaddress").val() + "\r\n Bitcoin Public Key: " + $("#idbtcpublickkey").val() +
	 "\r\n Bitcoin Private Key: " + $("#idbtcprivatekey").val()+"\r\n Stellar Public Key: "+$("#idstlpublickkey").val()+"\r\n Stellar Private Key: "+$("#idstlprivatekey").val()).val();
	var infoField = document.querySelector('#allinfo');
	console.log("getting here222")
	infoField .select();
	document.execCommand('copy');
	$("#allinfo").addClass("hidden");
		Swal.fire({
                        icon: 'success',
                        title: $('#copy-stellar-bitcoin-keys-label').text(),
                        text: $('#copy-success-label').text(),
                        showConfirmButton: true,
                        confirmButtonText: "Ok",
                        }).then(function() {
                           $('#register-bitcoin').attr('action', 'ws');
	                        $('input[name="qs"]').val('porte');
	                        $('input[name="rules"]').val('Assets');
	                        $("#register-bitcoin").submit();  
                });
	}, false);

var copyStlBtn = document.querySelector('#stlbtncopy');
copyStlBtn.addEventListener('click', function () {
	console.log("Inside copy")
	$("#allstlinfo").removeClass("hidden");
	$("#allstlinfo").val("Stellar Public Key: "+$("#stlidpublickkey").val()+"\r\n Stellar Private Key: "+$("#stlidprivatekey").val()).val();
	var infoField = document.querySelector('#allstlinfo');
	console.log("getting here222")
	infoField .select();
	document.execCommand('copy');
	$("#allstlinfo").addClass("hidden");
		Swal.fire({
                        icon: 'success',
                        title: $('#copy-stellar-bitcoin-keys-label').text(),
                        text: $('#copy-success-label').text(),
                        showConfirmButton: true,
                        confirmButtonText: "Ok",
                        }).then(function() {
                           $('#register-bitcoin').attr('action', 'ws');
	                        $('input[name="qs"]').val('porte');
	                        $('input[name="rules"]').val('Assets');
	                        $("#register-bitcoin").submit();  
                });
	}, false);

function createDigitalAssetViaWS(){
	$('#form-post-data').attr('action', 'ws');
  	$('#form-post-data').attr('action', 'ws');
    $('input[name="qs"]').val('porte');
    $('input[name="rules"]').val('create_digital_asset_page');
    $('input[name="json_string"]').val(jsonStringData);
    $('input[name="hdnlangpref"]').val($('#hdnlangpref').text());
    $("#form-post-data").submit();
}

function checkIfPasswordIsCorrect(security){
	var formData = new FormData();
	formData.append('qs','porte');
	formData.append('rules','check_password');
	formData.append('relno',relno);
	formData.append('security',security);
    for (var pair of formData.entries()) {
      console.log(pair[0] + " - " + pair[1]);
    }	
    $.ajaxSetup({
        beforeSend: function(xhr) {
            xhr.setRequestHeader('x-api-key' , getAPIKey());
        }
    });
    $.ajax({
        url: 'ms',
        data: formData,
        processData: false,
        contentType: false,
        type: 'POST',
        success: function (result) {
            var data = JSON.parse(result);
			console.log('data is ',data);
            if(data.error=='false'){
				if(data.passIsCorrect === true){
					createDigitalAssetViaWS();
				}else{
					 Swal.fire({
                        icon: 'error',
                        title: 'Oops',
                        text: 'Invalid Password',
                        showConfirmButton: true,
                        confirmButtonText: "Ok",
                        }).then(function() {
                            
                });
				}
                 
            }
        },
        error: function() {
            Swal.fire({
                        icon: 'error',
                        title: $('#data-validation-error-swal-header').text(),
                        text:  $('#data-validation-problem-with-connection').text(),
                        showConfirmButton: true,
                        confirmButtonText: "Ok",
                        }).then(function() {
                            
                });
        }
    });       
}


$( function() {
			$( '#cd-dropdown' ).dropdown( {
				gutter : 5,
				stack : false,
				delay : 100,
				slidingIn : 100
			} );
		});
				
		function fnUpdateParams(ac) {
			$('input[name="hdnassetcoincode"]').val(ac);
			//alert('here 4 ' + $('input[name="hdnassetcoincode"]').val());
		}
		
		$(function () {
		  $("select").change(function () {
		    $("img").attr("src", "https://theme.bitrixinfotech.com/crypto-wallet/assets/images/btc.png" + this.value + "?text=" + $(this).find("option:selected").text());
		  });
		});
			
			
$('#btn-regcoin').click(function() {
	//Check for the data validation	
	$("#regcryptocoin-form").validate({
		rules: {
			selcryptocoin: {
				required: true,
			},
			asssetdesc: {
				required: true,
			}

		},
		messages: {
			selcryptocoin: {
				required: $('#data-validation-select-asset-coin').text()
			},
			asssetdesc: {
				required: $('#data-validation-select-asset-coin-desc').text()
			}
		},
		errorElement: "em",
		errorPlacement: function(error, element) {
			// Add the `invalid-feedback` class to the error element
			error.addClass("invalid-feedback");
			if (element.prop("type") === "checkbox") {
				error.insertAfter(element.next("label"));
			} else {
				error.insertAfter(element);
			}
		},
		highlight: function(element, errorClass, validClass) {
			$(element).addClass("is-invalid").removeClass("is-valid");
		},
		unhighlight: function(element, errorClass, validClass) {
			$(element).addClass("is-valid").removeClass("is-invalid");
		}
	});

	if ($("#regcryptocoin-form").valid()) {
		$('input[name="qs"]').val('cryp');
		$('input[name="rules"]').val('custregistercoin');
		//$('input[name="hdnassetcoincode"]').val($('.selcryptocoin :selected').val());

		//alert(' hdnassetcoincode send is '+ $('input[name="hdnassetcoincode"]').val())
		//console.log('rule is ' + $('input[name="rules"]').val())
		//set required attribute on input to true
		//$('input').attr('data-parsley-required', 'true');

		//$("#editmerchuser-form").submit();

		var formData = new FormData($('#regcryptocoin-form')[0]);
		$.ajaxSetup({
			beforeSend: function(xhr) {
				xhr.setRequestHeader('x-api-key', getAPIKey());
			}
		});
		$.ajax({
			url: 'ms',
			data: formData,
			processData: false,
			contentType: false,
			type: 'POST',
			success: function(result) {
				//alert('result is '+result);
				var data = JSON.parse(result);
				if (data.error == 'false') {
					//alert('lgtoken is '+data.token)
					Swal.fire({
						icon: 'success',
						title: 'Good',
						text: data.message,
						showConfirmButton: true,
						confirmButtonText: "Ok",
					}).then(function() {
						//location.reload();
						$('#regcryptocoin-form').attr('action', 'ws');
						$('#regcryptocoin-form input[name="qs"]').val('cryp');
						$('#regcryptocoin-form input[name="rules"]').val('View Coins');
						$("#regcryptocoin-form").submit();
					});

				} else {
					Swal.fire({
						icon: 'error',
						title: 'Oops',
						text: data.error,
						showConfirmButton: true,
						confirmButtonText: "Ok",
					}).then(function() {
						//Do Nothing
					});
				}
			},
			error: function() {
				Swal.fire({
					icon: 'error',
					title: $('#data-validation-error-swal-header').text(),
					text: $('#data-validation-problem-with-connection').text(),
					showConfirmButton: true,
					confirmButtonText: "Ok",
				}).then(function() {
					//Do Nothing
				});
			}
		});

	} else {
		Swal.fire({
			icon: 'error',
			title: 'Oops..',
			text: 'Please check your data'
			//footer: '<a href>Why do I have this issue?</a>'
		})

		return false;
	}
});	


function getCustomerCryptoAssets(){
	console.log("getCustomerCryptoAssets");
	/* $('post_data input[name="qs"]').val('wal');
	$('post_data input[name="rules"]').val('get_wallet_coin_details');
	
	var form = $('#post_data')[0]; */
    var formData = new FormData();
	formData.append('qs','wal');
	formData.append('rules', 'get_wallet_coin_details');

	for (var pair of formData.entries()) {
        console.log(pair[0] + " - " + pair[1]);
    }	
	$.ajaxSetup({
		beforeSend: function(xhr) {
			xhr.setRequestHeader('x-api-key' , getAPIKey());
		}
	});
	$.ajax({
		url: 'ms',
		data: formData,
		processData: false,
		contentType: false,
		type: 'POST',
		success: function (result) {
			if (result) {
				var data = JSON.parse(result);
				var listCryptoAssets = data.data;
				var htmlOptions = '';
				$('#wallet_assets_div').html('');
                //htmlOptions=`<option value="" disabled selected>Select Asset</option>`;
				 if(listCryptoAssets.length>0){
					 for (i=0; i<listCryptoAssets.length;i++){
                        // htmlOptions+=`<option value="`+ listCryptoAssets[i].assetCode+`" >`+listCryptoAssets[i].assetCode+`</option>`;
						if(listCryptoAssets[i].assetCode === 'PORTE'){
                            htmlOptions+=`<div class="col-3">
                                            <label>
                                                <input type="radio" name="asset_value" value="`+listCryptoAssets[i].assetCode+`">
                                                <img src="assets/images/crypto/porte.svg" alt="`+listCryptoAssets[i].assetCode+`" height="40" width="40" >
                                                <p>`+listCryptoAssets[i].assetCode+`</p>
                                            </label>
                                     </div>`;

                        }else if(listCryptoAssets[i].assetCode === 'VESL'){
                            htmlOptions+=`<div class="col-3">
                                            <label>
                                                <input type="radio" name="asset_value" value="`+listCryptoAssets[i].assetCode+`">
                                                <img src="assets/images/crypto/vessel.png" alt="`+listCryptoAssets[i].assetCode+`" height="40" width="40" >
                                                <p>`+listCryptoAssets[i].assetCode+`</p>
                                            </label>
                                     </div>`;

                        }else if(listCryptoAssets[i].assetCode === 'XLM'){
                            htmlOptions+=`<div class="col-3">
                                            <label>
                                                <input type="radio" name="asset_value" value="`+listCryptoAssets[i].assetCode+`" >
                                                <img src="assets/images/crypto/xlm.svg" alt="`+listCryptoAssets[i].assetCode+`" height="40" width="40" >
                                                <p>`+listCryptoAssets[i].assetCode+`</p>
                                            </label>
                                     </div>`;
                        }else if(listCryptoAssets[i].assetCode === 'USDC'){
                            htmlOptions+=`<div class="col-3">
                                            <label>
                                                <input type="radio" name="asset_value" value="`+listCryptoAssets[i].assetCode+`">
                                                <img src="assets/images/crypto/usdc.png" alt="`+listCryptoAssets[i].assetCode+`" height="40" width="40" >
                                                <p>`+listCryptoAssets[i].assetCode+`</p>
                                            </label>
                                     </div>`;
                        }else if(listCryptoAssets[i].assetCode === 'BTCX'){
                            htmlOptions+=`<div class="col-3">
                                            <label>
                                                <input type="radio" name="asset_value" value="`+listCryptoAssets[i].assetCode+`">
                                                <img src="assets/images/crypto/bitcoin.svg" alt="`+listCryptoAssets[i].assetCode+`" height="40" width="40" >
                                                <p>`+listCryptoAssets[i].assetCode+`</p>
                                            </label>
                                     </div>`;
                        }
						}
				}else{
					htmlOptions ='<div>You have already assets all assets </div>';
				} 
				$('#wallet_assets_div').append(htmlOptions);
			}
			},
			error: function() {
			
		}
	}); 

}

function fnCreateWallet(security, hasMnemonic){
	    $( "#create-wal-form" ).validate( {
        rules: {
            input_wallet_desc: {
                required: true
            },
            asset_value: {
                required: true
            }
        },
        messages: {
            input_wallet_desc: {
                required: $('#data-validation-wallet-desc').text()
            },
            asset_value: {
                required: $('#data-validation-asset').text()
            }
        },
        errorElement: "em",
        errorPlacement: function ( error, element ) {
            // Add the `invalid-feedback` class to the error element
            error.addClass( "invalid-feedback" );
            if ( element.prop( "type" ) === "checkbox" ) {
                error.insertAfter( element.next( "label" ) );
            } else {
                error.insertAfter( element );
            }
        },
        highlight: function ( element, errorClass, validClass ) {
            $( element ).addClass( "is-invalid" ).removeClass( "is-valid" );
        },
        unhighlight: function (element, errorClass, validClass) {
            $( element ).addClass( "is-valid" ).removeClass( "is-invalid" );
        }
    });
    if($( "#create-wal-form" ).valid()){
		
		$('#spinner-div').show();//Load button clicked show spinner
        $('#create-wal-form input[name="qs"]').val('wal');
        $('#create-wal-form input[name="rules"]').val('create_porte_coin_wallets');
        
        var formData = new FormData($('#create-wal-form')[0]);
		formData.append('security',security);
		formData.append('hasMnemonic',hasMnemonic);
        for (var pair of formData.entries()) {
         
        }	
        $.ajaxSetup({
            beforeSend: function(xhr) {
                xhr.setRequestHeader('x-api-key' , getAPIKey());
            }
        });
         $.ajax({
            url: 'ms',
            data: formData,
            processData: false,
            contentType: false,
            type: 'POST',
            success: function (result) {
                
                var data = JSON.parse(result);
				$('#spinner-div').hide();//Request is complete so hide spinner
                //console.log('data ',data);
                if(data.error=='false'){
                    Swal.fire({
                        icon: 'success',
                        text: data.message,
                        showConfirmButton: true,
                        confirmButtonText: "Ok",
                    }).then(function() {
                        $('#post_data').attr('action', 'ws');
                        $('input[name="qs"]').val('porte');
                        $('input[name="rules"]').val('Assets');
                        $("#post_data").submit();
                    });	
                }else{
                    Swal.fire({
                        text: data.message, 
                        icon: "error",
                        showConfirmButton: true,
                        confirmButtonText: "Ok",
                        }).then(function() {
                            
                        });	
                }
            },
            error: function() {
                Swal.fire({
                            icon: 'error',
                            title: $('#data-validation-error-swal-header').text(),
                            text: $('#data-validation-problem-with-connection').text(),
                            showConfirmButton: true,
                            confirmButtonText: "Ok",
                            }).then(function() {
                                
                    });
            }
        });              	
    }
}


function checkIfUserHasMneonicCodeCreateWal(){
	var formData = new FormData();
	formData.append('qs','porte')
	formData.append('rules','check_if_customer_has_mnemonic_code')
    for (var pair of formData.entries()) {
      //console.log(pair[0] + " - " + pair[1]);
    }	
    $.ajaxSetup({
        beforeSend: function(xhr) {
            xhr.setRequestHeader('x-api-key' , getAPIKey());
        }
    });
    $.ajax({
        url: 'ms',
        data: formData,
        processData: false,
        contentType: false,
        type: 'POST',
        success: function (result) {
            //wallet_txn
            var data = JSON.parse(result);
            var htmlData ='';
            var txnList = data.data;
            if(data.error=='false'){
                if(data.hasmnemonic=='true'){
                    fnPasswordCreateWal(data.hasmnemonic);
                }else{
                    fnPrivateKeyCreateWal(data.hasmnemonic)
                }
               
            }else{
                Swal.fire({
                    icon: 'error',
                    title: 'Oops',
                    text: data.message,
                    showConfirmButton: true,
                    confirmButtonText: "Ok",
                    closeOnConfirm: true,
                    }).then(function() {
                       
            });
            }
        },
        error: function() {
            Swal.fire({
                        icon: 'error',
                        title: $('#data-validation-error-swal-header').text(),
                        text: $('#data-validation-problem-with-connection').text(),
                        showConfirmButton: true,
                        confirmButtonText: "Ok",
                        }).then(function() {
                            
                });
        }
    });             	
	
}

function fnPasswordCreateWal(hasMnemonic){
	const { value: password   } = Swal.fire({
		title: 'Enter your Password',
		input: 'password',
		inputLabel: 'Password',
		showCancelButton: true,
		inputAttributes: {
		autocapitalize: 'off',
		autocorrect: 'off'
		},
		inputValidator: (value) => {
		if (!value) {
			return $('#data-validation-password-input').text();
		}
		}
	}).then((result) => {
			if (result.value) {
				var passwordVal = result.value;
				fnCreateWallet(passwordVal,hasMnemonic );
			}
		});
}

function fnPrivateKeyCreateWal(hasMnemonic){
	const { value: password   } = Swal.fire({
		title: 'Enter your Private Key',
		input: 'password',
		inputLabel: 'Password',
		showCancelButton: true,
		inputAttributes: {
			autocapitalize: 'off',
			autocorrect: 'off'
		},
		inputValidator: (value) => {
		if (!value) {
			return $('#data-validation-pvt-input').text();
		}
		}
	}).then((result) => {
			if (result.value) {
				var privatekey = result.value;
				fnCreateWallet(privatekey,hasMnemonic );
			}
		});
}

// A $( document ).ready() block.
$( document ).ready(function() {
    getCustomerCryptoAssets();
	fnRelationshipNo();  
});






